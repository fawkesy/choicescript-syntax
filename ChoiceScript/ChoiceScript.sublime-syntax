%YAML 1.2
---
name: ChoiceScript
file_extensions: txt
scope: plain.cs
contexts:
  main:
    - match: '\*comment'
      scope: comment.line
      comment: COMMENT
      push:
        - meta_scope: comment.line
        - match: '$'
          pop: true
        - match: '(?<=\*comment\s)(todo|TODO).+'
          scope: comment.line.todo

    - match: '(^|\s)cs_+'
      scope: keyword.trigger
      comment: COMPLETTION

    - match: '\*(create|temp)'
      scope: keyword.declaration
      comment: CREATE
      push:
        - meta_scope: keyword.declaration.create
        - match: '$'
          pop: true
        - match: '\w+?\b'
          scope: variable.main
        - match: '(?<!create)\s[^a-z]+?$'
          scope: string
        - match: '\strue'
          scope: variable.true
        - match: '\sfalse'
          scope: variable.false
        - match: '".+?"'
          scope: string

    - match: '\*(finish|ending)'
      scope: keyword.declaration.end
      comment: ENDS

    - match: '\*set'
      scope: storage.modifier.set
      comment: SET
      push:
        - meta_scope: storage.modifier.set
        - match: '$'
          pop: true
        - match: '\w+?\b'
          scope: variable.main
        - match: '(?<!set)\s[^a-z]+?$'
          scope: string
        - match: '\strue'
          scope: variable.true
        - match: '\sfalse'
          scope: variable.false
        - match: '".+?"'
          scope: string

    - match: '\$!?{\w+}|'
      scope: variable.main
      comment: VARIABLE
    - match: '@{'
      scope: variable.function
      comment: MULTIREPLACE
      push:
        - meta_scope: variable.function
        - match: '(}|$)'
          pop: true
        - match: '(\(.+?\)|(?<={)\w+?(\s|$))'
          scope: variable.main
        - match: '(?<=\s).+?((?=})|((?=\|)|$))'
          scope: string.text
        - match: '(?<=\|).+?((?=})|(?=\|)|$)'
          scope: string.text

    - match: '\*(choice|fake_choice)'
      scope: entity.name
      comment: CHOICE
    - match: '#'
      scope: string.tag
      comment: OPTIONS
      push:
        - meta_scope: string.tag
        - match: '$'
          pop: true
        - match: '.+'
          scope: string.text

    - match: '\*label'
      scope: keyword.control.label
      comment: LABEL
      push:
        - meta_scope: keyword.control.label
        - match: '$'
          pop: true
        - match: '\w'
          scope: keyword.control.label.name
    - match: '\*(goto|gosub|gosub_scene|goto_scene|goto_random_scene|gotoref|return)'
      scope: keyword.control
      comment: GOTO
      push:
        - meta_scope: keyword.control.goto
        - match: '$'
          pop: true
        - match: '_.+?\s'
          scope: keyword.control.goto
        - match: '\w+'
          scope: keyword.control.label.name

    - match: '\*(if|elseif|elsif|else|if not)'
      scope: keyword.control.conditional
      comment: IF/ELSE
      push:
        - meta_scope: keyword.control.conditional
        - match: '$'
          pop: true
        - match: '((?<=\s)|(?<=\())not((?=\()|(?=\s))'
          scope: keyword.control.conditional
        - match: '((?<=\s)(or|and)|\=|\!\=|\+|\-|\%\+|\%\-|\<|\>|\<\=|\>\=)'
          scope: keyword.operator
        - match: '(?<=\()\w+?(?=\))'
          scope: variable.main
        - match: '"\w+?"'
          scope: string
        - match: '((?<=not\s)|(?<=if\s)|(?<=elseif\s)|(?<=elsif\s)).+?\b'
          scope: variable.main
        - match: '#'
          scope: string.tag
        - match: '(?<=#).+'
          scope: string.text
        - match: '(.?+)'
          scope: variable.main

    - match: '\*selectable_if'
      scope: keyword.control.conditional
      comment: SELECTABLE IF
      push:
        - meta_scope: keyword.control.selectable
        - match: '((?=#)|$)'
          pop: true
        - match: '(\(.+?\)|(?<=selectable_if\s).+?\s)'
          scope: variable.main

    - match: '\*(delete|image|line_break|link|more_games|page_break|print|rand|share_this_game|setref|text_image|check_purchase|advertisement|purchase_discount|config|bug)'
      scope: keyword
      comment: KEYWORDS
      push:
        - meta_scope: keywords.more
        - match: '$'
          pop: true
        - match: '(?<=\s)(adfree|center|left|right|skip_description)'
          scope: string
        - match: '.+\.(png|jpg|jpeg|gif)'
          scope: variable.main
        - match: '(?<=\s).+'
          scope: string.text
        - match: '\strue'
          scope: variable.true
        - match: '\sfalse'
          scope: variable.false

    - match: '\*achievement'
      scope: keyword
      comment: ACHIEVEMENTS
      push:
        - meta_scope: keyword.achievements
        - match: '$'
          pop: true
        - match: '(?<=achievement\s).+?\s'
          scope: keyword.control.conditional
        - match: '(?<=\s)hidden\s'
          scope: variable.false
        - match: '(?<=\s)visible\s'
          scope: variable.true
        - match: '(?<=\s)\d+\s'
          scope: string
        - match: '(?<=\d\s).+'
          scope: string.text
    - match: '\*(achieve|check_achievements)'
      scope: keyword
      push:
        - meta_scope: keyword.achieve
        - match: '$'
          pop: true
        - match: '(?<=\s).+'
          scope: keyword.control.conditional

    - match: '\[.+?\]'
      scope: keyword.bb
      comment: BBCODE

    - match: '\*(input_text|input_number)'
      scope: keyword
      comment: INPUTS
      push:
        - meta_scope: keyword
        - match: '$'
          pop: true
        - match: '(?<=\s).+'
          scope: variable.main

    - match: '\*stat_chart'
      scope: keyword
      comment: STAT CHART
      push:
        - meta_scope: keyword
        - match: '(^\s*$|(?=\[)|(?=\*))'
          pop: true
        - match: '(text|percent|opposed_pair)'
          scope: keyword.stats
        - match: '((?<=\stext\s)|(?<=\spercent\s)|(?<=\sopposed_pair\s))\w+'
          scope: variable.main
        - match: '\w+'
          scope: string.text

    - match: '\*(allow_reuse|disable_reuse|hide_reuse)'
      scope: keyword
      comment: REUSE
      push:
        - meta_scope: keyword.reuse
        - match: '\s'
          pop: true

    - match: '\*(author|title|scene_list)'
      scope: entity.name.title
      comment: STARTUP HEADER
